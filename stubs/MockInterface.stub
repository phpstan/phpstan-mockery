<?php

namespace Mockery;

interface MockInterface
{

	/**
	 * @param string|array<string, mixed> ...$methodNames
	 * @return Expectation
	 */
	public function shouldReceive(...$methodNames);

	/**
	 * @param string|array<string, mixed> ...$methodNames
	 * @return Expectation
	 */
	public function shouldNotReceive(...$methodNames);

	/**
	 * @return static
	 */
	public function makePartial();

}

interface LegacyMockInterface
{

	/**
	 * @param string|array<string, mixed> ...$methodNames
	 * @return Expectation
	 */
	public function shouldReceive(...$methodNames);

	/**
	 * @param string|array<string, mixed> ...$methodNames
	 * @return Expectation
	 */
	public function shouldNotReceive(...$methodNames);

    /**
     * @param null|string $method
     * @param null|array<mixed>|\Closure $args
     * @return Expectation
     */
    public function shouldHaveReceived($method, $args = null);

    /**
     * @param null|string $method
     * @param null|array<mixed>|\Closure $args
     * @return Expectation
     */
    public function shouldNotHaveReceived($method, $args = null);

	/**
	 * @return static
	 */
	public function makePartial();

    /**
     * @return static
     */
    public function shouldAllowMockingProtectedMethods();

}

class Expectation
{

}
